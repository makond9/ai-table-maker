import { Campaign } from '@/types/campaign';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Check, X, Edit3, Zap } from 'lucide-react';

interface CampaignPreviewProps {
  campaigns: Campaign[];
  onConfirm: () => void;
  onCancel: () => void;
  onEdit?: () => void;
}

export function CampaignPreview({ campaigns, onConfirm, onCancel, onEdit }: CampaignPreviewProps) {
  const completeCampaigns = campaigns.filter(c => 
    c.trafficAccount && c.offer && c.country && c.rk && c.pixel
  );
  const incompleteCampaigns = campaigns.filter(c => 
    !c.trafficAccount || !c.offer || !c.country || !c.rk || !c.pixel
  );

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="text-center space-y-2">
        <div className="flex items-center justify-center gap-2 text-primary">
          <Zap className="h-5 w-5" />
          <h2 className="text-xl font-semibold">AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ</h2>
        </div>
        <p className="text-muted-foreground">
          –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞–º–ø–∞–Ω–∏–π –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º
        </p>
      </div>

      {/* Complete Campaigns */}
      {completeCampaigns.length > 0 && (
        <div className="space-y-3">
          <h3 className="font-medium text-green-600 flex items-center gap-2">
            <Check className="h-4 w-4" />
            –ì–æ—Ç–æ–≤—ã–µ –∫ –∑–∞–ø—É—Å–∫—É ({completeCampaigns.length})
          </h3>
          
          <div className="space-y-2">
            {completeCampaigns.map((campaign, index) => (
              <Card key={campaign.id} className="p-4 border-green-200 bg-green-50/50">
                <div className="flex items-center justify-between">
                  <div className="space-y-1">
                    <div className="font-medium text-sm">
                      –ö–∞–º–ø–∞–Ω–∏—è #{index + 1}
                    </div>
                    <div className="text-sm text-muted-foreground">
                      <span className="inline-block bg-primary/10 text-primary px-2 py-1 rounded text-xs mr-2">
                        {campaign.trafficAccount}
                      </span>
                      <span className="inline-block bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs mr-2">
                        {campaign.offer}
                      </span>
                      <span className="inline-block bg-purple-100 text-purple-700 px-2 py-1 rounded text-xs mr-2">
                        {campaign.country}
                      </span>
                      <span className="inline-block bg-orange-100 text-orange-700 px-2 py-1 rounded text-xs mr-2">
                        {campaign.rk}
                      </span>
                      <span className="inline-block bg-green-100 text-green-700 px-2 py-1 rounded text-xs">
                        {campaign.pixel}
                      </span>
                    </div>
                  </div>
                  <Check className="h-5 w-5 text-green-600" />
                </div>
              </Card>
            ))}
          </div>
        </div>
      )}

      {/* Incomplete Campaigns */}
      {incompleteCampaigns.length > 0 && (
        <div className="space-y-3">
          <h3 className="font-medium text-orange-600 flex items-center gap-2">
            <Edit3 className="h-4 w-4" />
            –¢—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è ({incompleteCampaigns.length})
          </h3>
          
          <div className="space-y-2">
            {incompleteCampaigns.map((campaign, index) => (
              <Card key={campaign.id} className="p-4 border-orange-200 bg-orange-50/50">
                <div className="space-y-2">
                  <div className="font-medium text-sm">
                    –ö–∞–º–ø–∞–Ω–∏—è #{completeCampaigns.length + index + 1}
                  </div>
                  <div className="text-sm">
                    <div className="flex flex-wrap gap-1">
                      <span className={`inline-block px-2 py-1 rounded text-xs ${
                        campaign.trafficAccount 
                          ? 'bg-primary/10 text-primary' 
                          : 'bg-gray-100 text-gray-500 border border-dashed'
                      }`}>
                        {campaign.trafficAccount || '–¢—Ä–∞—Ñ–∏–∫-–∏—Å—Ç–æ—á–Ω–∏–∫'}
                      </span>
                      <span className={`inline-block px-2 py-1 rounded text-xs ${
                        campaign.offer 
                          ? 'bg-blue-100 text-blue-700' 
                          : 'bg-gray-100 text-gray-500 border border-dashed'
                      }`}>
                        {campaign.offer || '–û—Ñ—Ñ–µ—Ä'}
                      </span>
                      <span className={`inline-block px-2 py-1 rounded text-xs ${
                        campaign.country 
                          ? 'bg-purple-100 text-purple-700' 
                          : 'bg-gray-100 text-gray-500 border border-dashed'
                      }`}>
                        {campaign.country || '–°—Ç—Ä–∞–Ω–∞'}
                      </span>
                      <span className={`inline-block px-2 py-1 rounded text-xs ${
                        campaign.rk 
                          ? 'bg-orange-100 text-orange-700' 
                          : 'bg-gray-100 text-gray-500 border border-dashed'
                      }`}>
                        {campaign.rk || '–†–ö'}
                      </span>
                      <span className={`inline-block px-2 py-1 rounded text-xs ${
                        campaign.pixel 
                          ? 'bg-green-100 text-green-700' 
                          : 'bg-gray-100 text-gray-500 border border-dashed'
                      }`}>
                        {campaign.pixel || '–ü–∏–∫—Å–µ–ª—å'}
                      </span>
                    </div>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>
      )}

      {/* Action Summary */}
      <Card className="p-4 bg-primary/5 border-primary/20">
        <div className="space-y-2">
          <h4 className="font-medium text-primary">–ß—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ:</h4>
          <ul className="text-sm text-muted-foreground space-y-1">
            {completeCampaigns.length > 0 && (
              <li>‚úÖ –°–æ–∑–¥–∞—Ç—å {completeCampaigns.length} –≥–æ—Ç–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ –¢–æ–Ω–∏–∫</li>
            )}
            {incompleteCampaigns.length > 0 && (
              <li>‚è≥ –î–æ–±–∞–≤–∏—Ç—å {incompleteCampaigns.length} —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
            )}
            <li>üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –∫–∞–º–ø–∞–Ω–∏–π –≤ –ö–ª–∏–∫–§–µ–ª–µ—Ä</li>
            <li>üìä –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏—è–º–∏</li>
          </ul>
        </div>
      </Card>

      {/* Action Buttons */}
      <div className="flex justify-center gap-3">
        <Button
          variant="outline"
          onClick={onCancel}
          className="flex items-center gap-2"
        >
          <X className="h-4 w-4" />
          –û—Ç–º–µ–Ω–∏—Ç—å
        </Button>
        
        {onEdit && incompleteCampaigns.length > 0 && (
          <Button
            variant="secondary"
            onClick={onEdit}
            className="flex items-center gap-2"
          >
            <Edit3 className="h-4 w-4" />
            –£—Ç–æ—á–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
          </Button>
        )}
        
        <Button
          onClick={onConfirm}
          className="flex items-center gap-2 bg-green-600 hover:bg-green-700"
        >
          <Check className="h-4 w-4" />
          –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ
        </Button>
      </div>
    </div>
  );
}